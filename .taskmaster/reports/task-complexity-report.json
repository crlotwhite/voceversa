{
	"meta": {
		"generatedAt": "2025-08-09T14:19:44.952Z",
		"tasksAnalyzed": 1,
		"totalTasks": 10,
		"analysisCount": 1,
		"thresholdScore": 5,
		"projectName": "Taskmaster",
		"usedResearch": false
	},
	"complexityAnalysis": [
		{
			"taskId": 4,
			"taskTitle": "WAV 파일 I/O 및 오디오 처리 유틸리티 구현",
			"complexityScore": 7,
			"recommendedSubtasks": 5,
			"expansionPrompt": "코드베이스 분석 결과, DataPacket 클래스가 이미 오디오 데이터 구조(float vector, sample rate, channels, bit depth)와 기본 메타데이터를 지원합니다. 기존 구조를 활용하여 WAV I/O를 구현하되, 다음과 같이 하위 작업을 분할하세요: 1) WAV 헤더 파싱/생성 유틸리티, 2) WAV 파일 읽기 (DataPacket으로 로딩), 3) WAV 파일 쓰기 (DataPacket에서 저장), 4) 오디오 버퍼 관리 및 포맷 변환 유틸리티, 5) 윈도우 함수 및 FFT 래퍼. 기존 include/core/ 패턴을 따라 include/audio/ 디렉토리에 헤더를 배치하고 src/audio/에 구현을 작성하세요.",
			"reasoning": "기존 DataPacket과 ISynthesisNode 인터페이스가 잘 설계되어 있어 오디오 I/O 통합이 수월합니다. 하지만 WAV 파일 포맷 처리, 다양한 비트 깊이 지원, FFT 라이브러리 통합, 리샘플링 알고리즘 등 여러 복잡한 기능이 필요하여 중간 수준의 복잡도로 평가됩니다. 이미 5개 하위 작업이 잘 정의되어 있습니다."
		}
	]
}